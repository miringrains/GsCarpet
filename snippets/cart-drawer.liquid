{% comment %}
  Cart Drawer - Modern sliding cart
  Includes item management and checkout features
{% endcomment %}

<div 
  class="cart-drawer"
  x-data="cartDrawer()"
  x-show="$store.cart.isOpen"
  x-cloak
  @keydown.escape.window="$store.cart.close()"
>
  <!-- Overlay -->
  <div 
    class="cart-drawer__overlay"
    x-show="$store.cart.isOpen"
    x-transition:enter="transition ease-out duration-300"
    x-transition:enter-start="opacity-0"
    x-transition:enter-end="opacity-1"
    x-transition:leave="transition ease-in duration-200"
    x-transition:leave-start="opacity-1"
    x-transition:leave-end="opacity-0"
    @click="$store.cart.close()"
  ></div>
  
  <!-- Drawer -->
  <div 
    class="cart-drawer__content"
    x-show="$store.cart.isOpen"
    x-transition:enter="transition ease-out duration-300"
    x-transition:enter-start="translate-x-full"
    x-transition:enter-end="translate-x-0"
    x-transition:leave="transition ease-in duration-200"
    x-transition:leave-start="translate-x-0"
    x-transition:leave-end="translate-x-full"
    @click.away="$store.cart.close()"
  >
    <div class="cart-drawer__header">
      <h2 class="cart-drawer__title">Your Cart (<span x-text="$store.cart.itemCount">0</span>)</h2>
      <button 
        class="cart-drawer__close"
        @click="$store.cart.close()"
        aria-label="Close cart"
      >
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="1.5"/>
        </svg>
      </button>
    </div>
    
    <div class="cart-drawer__body">
      <!-- Empty Cart -->
      <div class="cart-drawer__empty" x-show="$store.cart.items.length === 0">
        <p>Your cart is empty</p>
        <button 
          class="btn btn--primary"
          @click="$store.cart.close()"
        >
          Continue Shopping
        </button>
      </div>
      
      <!-- Cart Items -->
      <div class="cart-drawer__items" x-show="$store.cart.items.length > 0">
        <template x-for="item in $store.cart.items" :key="item.key">
          <div class="cart-item">
            <div class="cart-item__image">
              <img :src="item.image" :alt="item.title">
            </div>
            
            <div class="cart-item__details">
              <h3 class="cart-item__title">
                <a :href="item.url" x-text="item.product_title"></a>
              </h3>
              <p class="cart-item__variant" x-text="item.variant_title"></p>
              
              <div class="cart-item__quantity">
                <button 
                  class="cart-item__quantity-btn"
                  @click="updateQuantity(item.key, item.quantity - 1)"
                  :disabled="item.quantity <= 1"
                >
                  -
                </button>
                <input 
                  type="number"
                  class="cart-item__quantity-input"
                  :value="item.quantity"
                  @change="updateQuantity(item.key, $event.target.value)"
                  min="1"
                >
                <button 
                  class="cart-item__quantity-btn"
                  @click="updateQuantity(item.key, item.quantity + 1)"
                >
                  +
                </button>
              </div>
            </div>
            
            <div class="cart-item__price">
              <span x-text="formatMoney(item.line_price)"></span>
              <button 
                class="cart-item__remove"
                @click="removeItem(item.key)"
                aria-label="Remove item"
              >
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                  <path d="M12 4L4 12M4 4L12 12" stroke="currentColor" stroke-width="1.5"/>
                </svg>
              </button>
            </div>
          </div>
        </template>
      </div>
    </div>
    
    <div class="cart-drawer__footer" x-show="$store.cart.items.length > 0">
      <div class="cart-drawer__subtotal">
        <span>Subtotal</span>
        <span x-text="formatMoney($store.cart.total_price)"></span>
      </div>
      
      <p class="cart-drawer__note">Shipping & taxes calculated at checkout</p>
      
      <div class="cart-drawer__actions">
        <a href="{{ routes.cart_url }}" class="btn btn--secondary">
          View Cart
        </a>
        <button 
          class="btn btn--primary"
          @click="checkout()"
          :disabled="updating"
        >
          <span x-show="!updating">Checkout</span>
          <span x-show="updating">Updating...</span>
        </button>
      </div>
    </div>
  </div>
</div>

<style>
  .cart-drawer__overlay {
    position: fixed;
    inset: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: var(--z-index-modal-backdrop);
  }
  
  .cart-drawer__content {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    max-width: 400px;
    background-color: var(--color-surface);
    z-index: var(--z-index-modal);
    display: flex;
    flex-direction: column;
    box-shadow: -2px 0 20px rgba(0, 0, 0, 0.1);
  }
  
  .cart-drawer__header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1.5rem;
    border-bottom: 1px solid var(--color-border);
  }
  
  .cart-drawer__title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
  }
  
  .cart-drawer__close {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    padding: 0;
    background: none;
    border: none;
    cursor: pointer;
    transition: var(--transition-base);
  }
  
  .cart-drawer__close:hover {
    color: var(--color-accent);
  }
  
  .cart-drawer__body {
    flex: 1;
    overflow-y: auto;
    padding: 1.5rem;
  }
  
  .cart-drawer__empty {
    text-align: center;
    padding: 3rem 1rem;
  }
  
  .cart-drawer__empty p {
    margin-bottom: 2rem;
    color: var(--color-text-secondary);
  }
  
  .cart-item {
    display: grid;
    grid-template-columns: 80px 1fr auto;
    gap: 1rem;
    padding: 1rem 0;
    border-bottom: 1px solid var(--color-border);
  }
  
  .cart-item:last-child {
    border-bottom: none;
  }
  
  .cart-item__image {
    aspect-ratio: 1;
    background: var(--color-background-subtle);
    border-radius: var(--radius-sm);
    overflow: hidden;
  }
  
  .cart-item__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .cart-item__title {
    font-size: 0.9375rem;
    font-weight: 500;
    margin: 0 0 0.25rem;
  }
  
  .cart-item__title a {
    text-decoration: none;
    color: var(--color-text-primary);
  }
  
  .cart-item__variant {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    margin: 0 0 0.5rem;
  }
  
  .cart-item__quantity {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .cart-item__quantity-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.75rem;
    height: 1.75rem;
    border: 1px solid var(--color-border);
    background: var(--color-surface);
    cursor: pointer;
    transition: var(--transition-base);
  }
  
  .cart-item__quantity-btn:hover:not(:disabled) {
    border-color: var(--color-accent);
  }
  
  .cart-item__quantity-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  .cart-item__quantity-input {
    width: 3rem;
    height: 1.75rem;
    text-align: center;
    border: 1px solid var(--color-border);
    font-size: 0.875rem;
  }
  
  .cart-item__price {
    text-align: right;
  }
  
  .cart-item__price span {
    display: block;
    font-weight: 500;
    margin-bottom: 0.5rem;
  }
  
  .cart-item__remove {
    padding: 0.25rem;
    background: none;
    border: none;
    cursor: pointer;
    color: var(--color-text-tertiary);
    transition: var(--transition-base);
  }
  
  .cart-item__remove:hover {
    color: var(--color-error);
  }
  
  .cart-drawer__footer {
    padding: 1.5rem;
    border-top: 1px solid var(--color-border);
  }
  
  .cart-drawer__subtotal {
    display: flex;
    justify-content: space-between;
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }
  
  .cart-drawer__note {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    text-align: center;
    margin-bottom: 1.5rem;
  }
  
  .cart-drawer__actions {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
  }
  
  @media (max-width: 480px) {
    .cart-drawer__content {
      max-width: 100%;
    }
  }
</style>

<script>
  Alpine.data('cartDrawer', () => ({
    updating: false,
    
    formatMoney(cents) {
      return `$${(cents / 100).toFixed(2)}`;
    },
    
    async updateQuantity(key, quantity) {
      if (quantity < 1) quantity = 1;
      this.updating = true;
      
      try {
        const response = await fetch('/cart/change.js', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id: key, quantity: parseInt(quantity) })
        });
        
        const cart = await response.json();
        this.$store.cart.updateCart(cart);
      } catch (error) {
        console.error('Error updating quantity:', error);
      } finally {
        this.updating = false;
      }
    },
    
    async removeItem(key) {
      await this.updateQuantity(key, 0);
    },
    
    checkout() {
      window.location.href = '/checkout';
    }
  }));
</script>